                        .module task_1.c
                        .area text(rom, con, rel)
 0000                   .dbfile task_1.c
 0000                   .dbfile E:\Projects\Microproccesorss\Lab1\imagectaft\task_1\task_1.c
 0000                   .dbfunc e delay _delay fV
 0000           ;             c1 -> R20,R21
 0000           ;             c2 -> R22,R23
 0000           ;             ms -> R16,R17
                        .even
 0000           _delay::
 0000 0E940000          xcall push_xgsetF000
 0004                   .dbline -1
 0004                   .dbline 5
 0004           ; #include "iom128v.h"
 0004           ; #include "macros.h"
 0004           ; 
 0004           ; void delay(int ms)
 0004           ; {
 0004                   .dbline 7
 0004           ;       int c1,c2;
 0004           ;     for(c1=0;c1<ms;c1++)
 0004 4427              clr R20
 0006 5527              clr R21
 0008 0BC0              xjmp L5
 000A           L2:
 000A                   .dbline 8
 000A           ;       for(c2=0;c2<970;c2++)
 000A 6627              clr R22
 000C 7727              clr R23
 000E           L6:
 000E                   .dbline 9
 000E           ;               NOP();
 000E 0000              nop
 0010           L7:
 0010                   .dbline 8
 0010 6F5F              subi R22,255  ; offset = 1
 0012 7F4F              sbci R23,255
 0014                   .dbline 8
 0014 6A3C              cpi R22,202
 0016 E3E0              ldi R30,3
 0018 7E07              cpc R23,R30
 001A CCF3              brlt L6
 001C           X0:
 001C           L3:
 001C                   .dbline 7
 001C 4F5F              subi R20,255  ; offset = 1
 001E 5F4F              sbci R21,255
 0020           L5:
 0020                   .dbline 7
 0020 4017              cp R20,R16
 0022 5107              cpc R21,R17
 0024 94F3              brlt L2
 0026           X1:
 0026                   .dbline -2
 0026           L1:
 0026                   .dbline 0 ; func end
 0026 0C940000          xjmp pop_xgsetF000
 002A                   .dbsym r c1 20 I
 002A                   .dbsym r c2 22 I
 002A                   .dbsym r ms 16 I
 002A                   .dbend
 002A                   .dbfunc e showData_sevenIndc _showData_sevenIndc fV
 002A           ;              i -> R10
 002A           ;           iter -> R12
 002A           ;          ports -> R18,R19
 002A           ;     seven_indc -> R16,R17
                        .even
 002A           _showData_sevenIndc::
 002A AA92              st -y,R10
 002C CA92              st -y,R12
 002E CA80              ldd R12,y+2
 0030                   .dbline -1
 0030                   .dbline 13
 0030           ; }
 0030           ; 
 0030           ; void showData_sevenIndc(char seven_indc[],char ports[],char iter)
 0030           ; {
 0030                   .dbline 15
 0030           ;       char i;
 0030           ;       for(i=0;i<iter;i++)
 0030 AA24              clr R10
 0032 0EC0              xjmp L14
 0034           L11:
 0034                   .dbline 16
 0034           ;     {
 0034                   .dbline 17
 0034           ;       PORTC=ports[i];
 0034 EA2D              mov R30,R10
 0036 FF27              clr R31
 0038 E20F              add R30,R18
 003A F31F              adc R31,R19
 003C 2080              ldd R2,z+0
 003E 25BA              out 0x15,R2
 0040                   .dbline 18
 0040           ;         PORTA=~seven_indc[i];
 0040 EA2D              mov R30,R10
 0042 FF27              clr R31
 0044 E00F              add R30,R16
 0046 F11F              adc R31,R17
 0048 2080              ldd R2,z+0
 004A 2094              com R2
 004C 2BBA              out 0x1b,R2
 004E                   .dbline 19
 004E           ;     }
 004E           L12:
 004E                   .dbline 15
 004E A394              inc R10
 0050           L14:
 0050                   .dbline 15
 0050 AC14              cp R10,R12
 0052 80F3              brlo L11
 0054           X2:
 0054                   .dbline -2
 0054           L10:
 0054                   .dbline 0 ; func end
 0054 C990              ld R12,y+
 0056 A990              ld R10,y+
 0058 0895              ret
 005A                   .dbsym r i 10 c
 005A                   .dbsym r iter 12 c
 005A                   .dbsym r ports 18 pc
 005A                   .dbsym r seven_indc 16 pc
 005A                   .dbend
 005A                   .dbfunc e scan_buttons _scan_buttons fc
 005A           ;              d -> R16
 005A           ;              t -> R18
                        .even
 005A           _scan_buttons::
 005A                   .dbline -1
 005A                   .dbline 23
 005A           ; }
 005A           ; 
 005A           ; char scan_buttons() // функция считывания состояния с кнопок
 005A           ; {
 005A                   .dbline 24
 005A           ;   char t, d=0;
 005A 0027              clr R16
 005C                   .dbline 25
 005C           ;   DDRA=0;                // порт А настроен на вход для считывания данных с кнопок
 005C 2224              clr R2
 005E 2ABA              out 0x1a,R2
 0060                   .dbline 26
 0060           ;   PORTD=0x80;    // уст. лог. 1 на выводе PD7 для управления регистром клавиатуры
 0060 80E8              ldi R24,128
 0062 82BB              out 0x12,R24
 0064                   .dbline 27
 0064           ;   t=PINA;                // считывание значения с шины данных
 0064 29B3              in R18,0x19
 0066                   .dbline 28
 0066           ;   PORTD=0;               // перевод регистра клавиатуры в высокоимпедансное состояние
 0066 22BA              out 0x12,R2
 0068                   .dbline 29
 0068           ;   DDRA=0xFF;     // настройка порта А на выход
 0068 8FEF              ldi R24,255
 006A 8ABB              out 0x1a,R24
 006C                   .dbline 30
 006C           ;   DDRG=0x01;     // разрешение работы дешифратора
 006C 81E0              ldi R24,1
 006E 80936400          sts 100,R24
 0072                   .dbline 31
 0072           ;   PORTG=0;               // установка на выходе PG0 лог. 0
 0072 20926500          sts 101,R2
 0076                   .dbline 33
 0076           ;   // преобразование данных, полученных с кнопок для удобства использования
 0076           ;   if((t&0x10)==0) d=1;        
 0076 24FD              sbrc R18,4
 0078 01C0              rjmp L16
 007A           X3:
 007A                   .dbline 33
 007A 01E0              ldi R16,1
 007C           L16:
 007C                   .dbline 34
 007C           ;   if((t&0x20)==0) d=2;
 007C 25FD              sbrc R18,5
 007E 01C0              rjmp L18
 0080           X4:
 0080                   .dbline 34
 0080 02E0              ldi R16,2
 0082           L18:
 0082                   .dbline 35
 0082           ;   if((t&0x40)==0) d=3;
 0082 26FD              sbrc R18,6
 0084 01C0              rjmp L20
 0086           X5:
 0086                   .dbline 35
 0086 03E0              ldi R16,3
 0088           L20:
 0088                   .dbline 36
 0088           ;   if((t&0x80)==0) d=4;
 0088 27FD              sbrc R18,7
 008A 01C0              rjmp L22
 008C           X6:
 008C                   .dbline 36
 008C 04E0              ldi R16,4
 008E           L22:
 008E                   .dbline 37
 008E           ;   if((t&0x01)==0) d=5;
 008E 20FD              sbrc R18,0
 0090 01C0              rjmp L24
 0092           X7:
 0092                   .dbline 37
 0092 05E0              ldi R16,5
 0094           L24:
 0094                   .dbline 38
 0094           ;   if((t&0x02)==0) d=6;
 0094 21FD              sbrc R18,1
 0096 01C0              rjmp L26
 0098           X8:
 0098                   .dbline 38
 0098 06E0              ldi R16,6
 009A           L26:
 009A                   .dbline 39
 009A           ;   if((t&0x04)==0) d=7;
 009A 22FD              sbrc R18,2
 009C 01C0              rjmp L28
 009E           X9:
 009E                   .dbline 39
 009E 07E0              ldi R16,7
 00A0           L28:
 00A0                   .dbline 40
 00A0           ;   if((t&0x08)==0) d=8;
 00A0 23FD              sbrc R18,3
 00A2 01C0              rjmp L30
 00A4           X10:
 00A4                   .dbline 40
 00A4 08E0              ldi R16,8
 00A6           L30:
 00A6                   .dbline 41
 00A6           ;   return d;     // значение возвращается из функции с инверсией
 00A6                   .dbline -2
 00A6           L15:
 00A6                   .dbline 0 ; func end
 00A6 0895              ret
 00A8                   .dbsym r d 16 c
 00A8                   .dbsym r t 18 c
 00A8                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile E:\Projects\Microproccesorss\Lab1\imagectaft\task_1\task_1.c
 0000           L33:
 0000                   .blkb 2
                        .area idata
 0000 1707              .byte 23,7
                        .area data(ram, con, rel)
 0002                   .dbfile E:\Projects\Microproccesorss\Lab1\imagectaft\task_1\task_1.c
 0002                   .blkb 2
                        .area idata
 0002 775B              .byte 'w,91
                        .area data(ram, con, rel)
 0004                   .dbfile E:\Projects\Microproccesorss\Lab1\imagectaft\task_1\task_1.c
 0004           L34:
 0004                   .blkb 2
                        .area idata
 0004 773D              .byte 'w,61
                        .area data(ram, con, rel)
 0006                   .dbfile E:\Projects\Microproccesorss\Lab1\imagectaft\task_1\task_1.c
 0006                   .blkb 2
                        .area idata
 0006 1F4C              .byte 31,'L
                        .area data(ram, con, rel)
 0008                   .dbfile E:\Projects\Microproccesorss\Lab1\imagectaft\task_1\task_1.c
 0008           L35:
 0008                   .blkb 2
                        .area idata
 0008 0607              .byte 6,7
                        .area data(ram, con, rel)
 000A                   .dbfile E:\Projects\Microproccesorss\Lab1\imagectaft\task_1\task_1.c
 000A                   .blkb 2
                        .area idata
 000A 0102              .byte 1,2
                        .area data(ram, con, rel)
 000C                   .dbfile E:\Projects\Microproccesorss\Lab1\imagectaft\task_1\task_1.c
                        .area text(rom, con, rel)
 00A8                   .dbfile E:\Projects\Microproccesorss\Lab1\imagectaft\task_1\task_1.c
 00A8                   .dbfunc e main _main fV
 00A8           ;              k -> <dead>
 00A8           ;              j -> <dead>
 00A8           ;              i -> <dead>
 00A8           ;           open -> y+9
 00A8           ;           clos -> y+5
 00A8           ;           buss -> y+1
 00A8           ;              d -> R22
 00A8           ;          state -> R20
                        .even
 00A8           _main::
 00A8 2D97              sbiw R28,13
 00AA                   .dbline -1
 00AA                   .dbline 45
 00AA           ; }
 00AA           ; 
 00AA           ; void main()
 00AA           ; {
 00AA                   .dbline 46
 00AA           ;       char d=0;
 00AA 6627              clr R22
 00AC                   .dbline 48
 00AC           ;       char i,j,k;
 00AC           ;     char state=0;
 00AC 4427              clr R20
 00AE                   .dbline 49
 00AE           ;       char clos[4]={0b00010111,0b00000111,0b01110111,0b01011011};
 00AE 80E0              ldi R24,<L33
 00B0 90E0              ldi R25,>L33
 00B2 FE01              movw R30,R28
 00B4 3596              adiw R30,5
 00B6 04E0              ldi R16,4
 00B8 10E0              ldi R17,0
 00BA FA93              st -y,R31
 00BC EA93              st -y,R30
 00BE 9A93              st -y,R25
 00C0 8A93              st -y,R24
 00C2 0E940000          xcall asgnblk
 00C6                   .dbline 50
 00C6           ;     char open[4]={0b01110111,0b00111101,0b00011111,0b01001100};
 00C6 80E0              ldi R24,<L34
 00C8 90E0              ldi R25,>L34
 00CA FE01              movw R30,R28
 00CC 3996              adiw R30,9
 00CE 04E0              ldi R16,4
 00D0 10E0              ldi R17,0
 00D2 FA93              st -y,R31
 00D4 EA93              st -y,R30
 00D6 9A93              st -y,R25
 00D8 8A93              st -y,R24
 00DA 0E940000          xcall asgnblk
 00DE                   .dbline 51
 00DE           ;     char buss[4]={6,7,1,2};
 00DE 80E0              ldi R24,<L35
 00E0 90E0              ldi R25,>L35
 00E2 FE01              movw R30,R28
 00E4 3196              adiw R30,1
 00E6 04E0              ldi R16,4
 00E8 10E0              ldi R17,0
 00EA FA93              st -y,R31
 00EC EA93              st -y,R30
 00EE 9A93              st -y,R25
 00F0 8A93              st -y,R24
 00F2 0E940000          xcall asgnblk
 00F6                   .dbline 52
 00F6           ;       DDRA=0xFF;
 00F6 8FEF              ldi R24,255
 00F8 8ABB              out 0x1a,R24
 00FA                   .dbline 53
 00FA           ;     DDRC=0b00000111;
 00FA 87E0              ldi R24,7
 00FC 84BB              out 0x14,R24
 00FE                   .dbline 54
 00FE           ;     PORTA=0;
 00FE 2224              clr R2
 0100 2BBA              out 0x1b,R2
 0102                   .dbline 55
 0102           ;     PORTC=0;
 0102 25BA              out 0x15,R2
 0104                   .dbline 56
 0104           ;     PORTC=5;
 0104 85E0              ldi R24,5
 0106 85BB              out 0x15,R24
 0108                   .dbline 57
 0108           ;     DDRG=0b00000001;
 0108 81E0              ldi R24,1
 010A 80936400          sts 100,R24
 010E                   .dbline 58
 010E           ;     DDRD=0x80;
 010E 80E8              ldi R24,128
 0110 81BB              out 0x11,R24
 0112 88C0              xjmp L37
 0114           L36:
 0114                   .dbline 60
 0114           ;     while(1)
 0114           ;     {
 0114                   .dbline 61
 0114           ;       d=scan_buttons();
 0114 A2DF              xcall _scan_buttons
 0116 602F              mov R22,R16
 0118                   .dbline 63
 0118           ;         
 0118           ;         if(state==0)
 0118 4423              tst R20
 011A 29F5              brne L39
 011C           X11:
 011C                   .dbline 64
 011C           ;         {
 011C                   .dbline 65
 011C           ;                       PORTC=4;
 011C 84E0              ldi R24,4
 011E 85BB              out 0x15,R24
 0120                   .dbline 66
 0120           ;                       PORTA=0b00000001;
 0120 81E0              ldi R24,1
 0122 8BBB              out 0x1b,R24
 0124                   .dbline 67
 0124           ;               showData_sevenIndc(clos,buss,4);
 0124 84E0              ldi R24,4
 0126 8883              std y+0,R24
 0128 9E01              movw R18,R28
 012A 2F5F              subi R18,255  ; offset = 1
 012C 3F4F              sbci R19,255
 012E 8E01              movw R16,R28
 0130 0B5F              subi R16,251  ; offset = 5
 0132 1F4F              sbci R17,255
 0134 7ADF              xcall _showData_sevenIndc
 0136                   .dbline 68
 0136           ;                       if(d==1)
 0136 6130              cpi R22,1
 0138 59F4              brne L41
 013A           X12:
 013A                   .dbline 69
 013A           ;             {
 013A                   .dbline 70
 013A           ;               state=1;
 013A 41E0              ldi R20,1
 013C                   .dbline 71
 013C           ;                 showData_sevenIndc(clos,buss,4);
 013C 84E0              ldi R24,4
 013E 8883              std y+0,R24
 0140 9E01              movw R18,R28
 0142 2F5F              subi R18,255  ; offset = 1
 0144 3F4F              sbci R19,255
 0146 8E01              movw R16,R28
 0148 0B5F              subi R16,251  ; offset = 5
 014A 1F4F              sbci R17,255
 014C 6EDF              xcall _showData_sevenIndc
 014E                   .dbline 72
 014E           ;             }
 014E 67C0              xjmp L40
 0150           L41:
 0150                   .dbline 74
 0150           ;             else 
 0150           ;             {
 0150                   .dbline 75
 0150           ;               state=0;
 0150 4427              clr R20
 0152                   .dbline 76
 0152           ;                 showData_sevenIndc(clos,buss,4);
 0152 84E0              ldi R24,4
 0154 8883              std y+0,R24
 0156 9E01              movw R18,R28
 0158 2F5F              subi R18,255  ; offset = 1
 015A 3F4F              sbci R19,255
 015C 8E01              movw R16,R28
 015E 0B5F              subi R16,251  ; offset = 5
 0160 1F4F              sbci R17,255
 0162 63DF              xcall _showData_sevenIndc
 0164                   .dbline 77
 0164           ;             }
 0164                   .dbline 78
 0164           ;         }
 0164 5CC0              xjmp L40
 0166           L39:
 0166                   .dbline 79
 0166           ;         else if(state==1)
 0166 4130              cpi R20,1
 0168 C1F4              brne L43
 016A           X13:
 016A                   .dbline 80
 016A           ;         {
 016A                   .dbline 81
 016A           ;                       if(d==2)
 016A 6230              cpi R22,2
 016C 59F4              brne L45
 016E           X14:
 016E                   .dbline 82
 016E           ;             {
 016E                   .dbline 83
 016E           ;               state=2;
 016E 42E0              ldi R20,2
 0170                   .dbline 84
 0170           ;                 showData_sevenIndc(clos,buss,4);
 0170 84E0              ldi R24,4
 0172 8883              std y+0,R24
 0174 9E01              movw R18,R28
 0176 2F5F              subi R18,255  ; offset = 1
 0178 3F4F              sbci R19,255
 017A 8E01              movw R16,R28
 017C 0B5F              subi R16,251  ; offset = 5
 017E 1F4F              sbci R17,255
 0180 54DF              xcall _showData_sevenIndc
 0182                   .dbline 85
 0182           ;             }
 0182 4DC0              xjmp L44
 0184           L45:
 0184                   .dbline 87
 0184           ;             else 
 0184           ;             {
 0184                   .dbline 88
 0184           ;               state=0;
 0184 4427              clr R20
 0186                   .dbline 89
 0186           ;                 showData_sevenIndc(clos,buss,4);
 0186 84E0              ldi R24,4
 0188 8883              std y+0,R24
 018A 9E01              movw R18,R28
 018C 2F5F              subi R18,255  ; offset = 1
 018E 3F4F              sbci R19,255
 0190 8E01              movw R16,R28
 0192 0B5F              subi R16,251  ; offset = 5
 0194 1F4F              sbci R17,255
 0196 49DF              xcall _showData_sevenIndc
 0198                   .dbline 90
 0198           ;             }
 0198                   .dbline 91
 0198           ;         }
 0198 42C0              xjmp L44
 019A           L43:
 019A                   .dbline 92
 019A           ;         else if(state==2)
 019A 4230              cpi R20,2
 019C C1F4              brne L47
 019E           X15:
 019E                   .dbline 93
 019E           ;         {
 019E                   .dbline 94
 019E           ;                       if(d==3)
 019E 6330              cpi R22,3
 01A0 59F4              brne L49
 01A2           X16:
 01A2                   .dbline 95
 01A2           ;             {
 01A2                   .dbline 96
 01A2           ;               state=3;
 01A2 43E0              ldi R20,3
 01A4                   .dbline 97
 01A4           ;                 showData_sevenIndc(clos,buss,4);
 01A4 84E0              ldi R24,4
 01A6 8883              std y+0,R24
 01A8 9E01              movw R18,R28
 01AA 2F5F              subi R18,255  ; offset = 1
 01AC 3F4F              sbci R19,255
 01AE 8E01              movw R16,R28
 01B0 0B5F              subi R16,251  ; offset = 5
 01B2 1F4F              sbci R17,255
 01B4 3ADF              xcall _showData_sevenIndc
 01B6                   .dbline 98
 01B6           ;             }
 01B6 33C0              xjmp L48
 01B8           L49:
 01B8                   .dbline 100
 01B8           ;             else 
 01B8           ;             {
 01B8                   .dbline 101
 01B8           ;               state=0;
 01B8 4427              clr R20
 01BA                   .dbline 102
 01BA           ;                 showData_sevenIndc(clos,buss,4);
 01BA 84E0              ldi R24,4
 01BC 8883              std y+0,R24
 01BE 9E01              movw R18,R28
 01C0 2F5F              subi R18,255  ; offset = 1
 01C2 3F4F              sbci R19,255
 01C4 8E01              movw R16,R28
 01C6 0B5F              subi R16,251  ; offset = 5
 01C8 1F4F              sbci R17,255
 01CA 2FDF              xcall _showData_sevenIndc
 01CC                   .dbline 103
 01CC           ;             }
 01CC                   .dbline 104
 01CC           ;         }
 01CC 28C0              xjmp L48
 01CE           L47:
 01CE                   .dbline 105
 01CE           ;         else if(state==3)
 01CE 4330              cpi R20,3
 01D0 C1F4              brne L51
 01D2           X17:
 01D2                   .dbline 106
 01D2           ;         {
 01D2                   .dbline 107
 01D2           ;                       if(d==4)
 01D2 6430              cpi R22,4
 01D4 59F4              brne L53
 01D6           X18:
 01D6                   .dbline 108
 01D6           ;             {
 01D6                   .dbline 109
 01D6           ;               state=4;
 01D6 44E0              ldi R20,4
 01D8                   .dbline 110
 01D8           ;                 showData_sevenIndc(clos,buss,4);
 01D8 84E0              ldi R24,4
 01DA 8883              std y+0,R24
 01DC 9E01              movw R18,R28
 01DE 2F5F              subi R18,255  ; offset = 1
 01E0 3F4F              sbci R19,255
 01E2 8E01              movw R16,R28
 01E4 0B5F              subi R16,251  ; offset = 5
 01E6 1F4F              sbci R17,255
 01E8 20DF              xcall _showData_sevenIndc
 01EA                   .dbline 111
 01EA           ;             }
 01EA 19C0              xjmp L52
 01EC           L53:
 01EC                   .dbline 113
 01EC           ;             else 
 01EC           ;             {
 01EC                   .dbline 114
 01EC           ;               state=0;
 01EC 4427              clr R20
 01EE                   .dbline 115
 01EE           ;                 showData_sevenIndc(clos,buss,4);
 01EE 84E0              ldi R24,4
 01F0 8883              std y+0,R24
 01F2 9E01              movw R18,R28
 01F4 2F5F              subi R18,255  ; offset = 1
 01F6 3F4F              sbci R19,255
 01F8 8E01              movw R16,R28
 01FA 0B5F              subi R16,251  ; offset = 5
 01FC 1F4F              sbci R17,255
 01FE 15DF              xcall _showData_sevenIndc
 0200                   .dbline 116
 0200           ;             }
 0200                   .dbline 117
 0200           ;         }
 0200 0EC0              xjmp L52
 0202           L51:
 0202                   .dbline 118
 0202           ;         else if(state==4)
 0202 4430              cpi R20,4
 0204 61F4              brne L55
 0206           X19:
 0206                   .dbline 119
 0206           ;         {
 0206                   .dbline 120
 0206           ;               PORTC=4;
 0206 84E0              ldi R24,4
 0208 85BB              out 0x15,R24
 020A                   .dbline 121
 020A           ;                       PORTA=0b00000001<1;
 020A 2224              clr R2
 020C 2BBA              out 0x1b,R2
 020E                   .dbline 122
 020E           ;               showData_sevenIndc(open,buss,4);
 020E 8883              std y+0,R24
 0210 9E01              movw R18,R28
 0212 2F5F              subi R18,255  ; offset = 1
 0214 3F4F              sbci R19,255
 0216 8E01              movw R16,R28
 0218 075F              subi R16,247  ; offset = 9
 021A 1F4F              sbci R17,255
 021C 06DF              xcall _showData_sevenIndc
 021E                   .dbline 123
 021E           ;         }
 021E           L55:
 021E           L52:
 021E           L48:
 021E           L44:
 021E           L40:
 021E                   .dbline 124
 021E           ;         delay(5000);
 021E 08E8              ldi R16,5000
 0220 13E1              ldi R17,19
 0222 EEDE              xcall _delay
 0224                   .dbline 126
 0224           ; 
 0224           ;     }
 0224           L37:
 0224                   .dbline 59
 0224 77CF              xjmp L36
 0226           X20:
 0226                   .dbline -2
 0226           L32:
 0226                   .dbline 0 ; func end
 0226 2D96              adiw R28,13
 0228 0895              ret
 022A                   .dbsym l k 2 c
 022A                   .dbsym l j 2 c
 022A                   .dbsym l i 2 c
 022A                   .dbsym l open 9 A[4:4]c
 022A                   .dbsym l clos 5 A[4:4]c
 022A                   .dbsym l buss 1 A[4:4]c
 022A                   .dbsym r d 22 c
 022A                   .dbsym r state 20 c
 022A                   .dbend
 022A           ; }
