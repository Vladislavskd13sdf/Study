Interrupt Vectors
00000 940C 002A JMP	__text_start|__start
Program Code (text area)
FILE: E:\Projects\ImageCraft\12022020\2bit_to_10.c
(0001) #include "iom128v.h"
(0002) #include "macros.h"
(0003)  char seg[16];
(0004)   char x,y,z;
(0005) 
(0006) void delay(int ms)
__text_start|__start:
    0002A E5CF      LDI	R28,0x5F
    0002B E0D4      LDI	R29,4
    0002C BFCD      OUT	0x3D,R28
    0002D BFDE      OUT	0x3E,R29
    0002E 51CE      SUBI	R28,0x1E
    0002F 40D0      SBCI	R29,0
    00030 EA0A      LDI	R16,0xAA
    00031 8308      ST	Y,R16
    00032 2400      CLR	R0
    00033 E6E0      LDI	R30,0x60
    00034 E0F0      LDI	R31,0
    00035 E010      LDI	R17,0
    00036 37E3      CPI	R30,0x73
    00037 07F1      CPC	R31,R17
    00038 F011      BEQ	0x003B
    00039 9201      ST	Z+,R0
    0003A CFFB      RJMP	0x0036
    0003B 8300      ST	Z,R16
    0003C E5E4      LDI	R30,0x54
    0003D E0F0      LDI	R31,0
    0003E E6A0      LDI	R26,0x60
    0003F E0B0      LDI	R27,0
    00040 E010      LDI	R17,0
    00041 E000      LDI	R16,0
    00042 BF0B      OUT	0x3B,R16
    00043 35E4      CPI	R30,0x54
    00044 07F1      CPC	R31,R17
    00045 F021      BEQ	0x004A
    00046 95C8      LPM
    00047 9631      ADIW	R30,1
    00048 920D      ST	X+,R0
    00049 CFF9      RJMP	0x0043
    0004A 940E 0068 CALL	_main
_exit:
    0004C CFFF      RJMP	_exit
_delay:
  c1                   --> R20
  c2                   --> R22
  ms                   --> R16
    0004D 940E 00B0 CALL	push_xgsetF000
    0004F 2744      CLR	R20
    00050 2755      CLR	R21
    00051 C00B      RJMP	0x005D
(0007) {
(0008)  int c1, c2;
(0009)  for(c1=0;c1<ms;c1++)
(0010)   for(c2=0;c2<970;c2++) NOP();
    00052 2766      CLR	R22
    00053 2777      CLR	R23
    00054 0000      NOP
    00055 5F6F      SUBI	R22,0xFF
    00056 4F7F      SBCI	R23,0xFF
    00057 3C6A      CPI	R22,0xCA
    00058 E0E3      LDI	R30,3
    00059 077E      CPC	R23,R30
    0005A F3CC      BLT	0x0054
    0005B 5F4F      SUBI	R20,0xFF
    0005C 4F5F      SBCI	R21,0xFF
    0005D 1740      CP	R20,R16
    0005E 0751      CPC	R21,R17
    0005F F394      BLT	0x0052
    00060 940C 00B5 JMP	pop_xgsetF000
(0011) }
(0012) 
(0013) void segments(int i, int j)
(0014) {
(0015)  PORTC=i;
_segments:
  j                    --> R18
  i                    --> R16
    00062 BB05      OUT	0x15,R16
(0016)  PORTA=~j;
    00063 0119      MOVW	R2,R18
    00064 9420      COM	R2
    00065 9430      COM	R3
    00066 BA2B      OUT	0x1B,R2
    00067 9508      RET
(0017) }
(0018) 
(0019) void main()
(0020) {
(0021)  //char const zero=0b00000000;
(0022)  seg[0]=0b00111111;//0
_main:
    00068 E38F      LDI	R24,0x3F
    00069 9380 0063 STS	seg,R24
(0023)  seg[1]=0b00000110;//1
    0006B E086      LDI	R24,6
    0006C 9380 0064 STS	seg+1,R24
(0024)  seg[2]=0b01011011;//2
    0006E E58B      LDI	R24,0x5B
    0006F 9380 0065 STS	seg+2,R24
(0025)  seg[3]=0b01001111;//3
    00071 E48F      LDI	R24,0x4F
    00072 9380 0066 STS	seg+3,R24
(0026)  seg[4]=0b01100110;//4
    00074 E686      LDI	R24,0x66
    00075 9380 0067 STS	seg+4,R24
(0027)  seg[5]=0b01101101;//5
    00077 E68D      LDI	R24,0x6D
    00078 9380 0068 STS	seg+5,R24
(0028)  seg[6]=0b01111101;//6
    0007A E78D      LDI	R24,0x7D
    0007B 9380 0069 STS	seg+6,R24
(0029)  seg[7]=0b00000111;//7
    0007D E087      LDI	R24,7
    0007E 9380 006A STS	seg+7,R24
(0030)  seg[8]=0b01111111;//8
    00080 E78F      LDI	R24,0x7F
    00081 9380 006B STS	seg+8,R24
(0031)  seg[9]=0b01101111;//9
    00083 E68F      LDI	R24,0x6F
    00084 9380 006C STS	seg+9,R24
(0032)  seg[10]=0b01110111;//a
    00086 E787      LDI	R24,0x77
    00087 9380 006D STS	seg+10,R24
(0033)  seg[11]=0b01111100;//b
    00089 E78C      LDI	R24,0x7C
    0008A 9380 006E STS	seg+11,R24
(0034)  seg[12]=0b00111001;//c
    0008C E389      LDI	R24,0x39
    0008D 9380 006F STS	seg+12,R24
(0035)  seg[13]=0b01011110;//d
    0008F E58E      LDI	R24,0x5E
    00090 9380 0070 STS	seg+13,R24
(0036)  seg[14]=0b01111001;//e
    00092 E789      LDI	R24,0x79
    00093 9380 0071 STS	seg+14,R24
(0037)  seg[15]=0b01110001;//f
    00095 E781      LDI	R24,0x71
    00096 9380 0072 STS	seg+15,R24
(0038)  
(0039)  //char idecator[4]={6,7,1,2};
(0040)  //char bin[16]={0b00000000,0b00000001,0b00000010,0b00000011,0b00000100,0b00000101,0b00000110,0b00000111,0b00001000,0b00001001,0b00001010,0b00001011,0b00001100,0b00001101,0b00001110,0b00001111};
(0041)  DDRC=0b11111111; 		   
    00098 EF8F      LDI	R24,0xFF
    00099 BB84      OUT	0x14,R24
    0009A C013      RJMP	0x00AE
(0042)  while(1)
(0043)  {
(0044)  y=PINA;
    0009B B229      IN	R2,0x19
    0009C 9220 0061 STS	y,R2
(0045)  y=~y;
    0009E 9420      COM	R2
    0009F 9220 0061 STS	y,R2
(0046)  y=y&0b00001111;
    000A1 2D82      MOV	R24,R2
    000A2 708F      ANDI	R24,0xF
    000A3 9380 0061 STS	y,R24
(0047)   PORTC=seg[y];
(0048)   }
(0049) }
(0050) 
FILE: <library>
    000A5 E683      LDI	R24,0x63
    000A6 E090      LDI	R25,0
    000A7 91E0 0061 LDS	R30,y
    000A9 27FF      CLR	R31
    000AA 0FE8      ADD	R30,R24
    000AB 1FF9      ADC	R31,R25
    000AC 8020      LD	R2,Z
    000AD BA25      OUT	0x15,R2
    000AE CFEC      RJMP	0x009B
    000AF 9508      RET
push_xgsetF000:
    000B0 937A      ST	-Y,R23
    000B1 936A      ST	-Y,R22
    000B2 935A      ST	-Y,R21
    000B3 934A      ST	-Y,R20
    000B4 9508      RET
pop_xgsetF000:
    000B5 9149      LD	R20,Y+
    000B6 9159      LD	R21,Y+
    000B7 9169      LD	R22,Y+
    000B8 9179      LD	R23,Y+
    000B9 9508      RET
